// <auto-generated />
using System;
using MedShare.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedShare.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251030101606_RefreshSchema")]
    partial class RefreshSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("MedShare.Models.Doacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaminhoFoto")
                        .HasColumnType("TEXT");

                    b.Property<string>("CaminhoReceita")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DoadorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FormaFarmaceutica")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeDoacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PrazoAnalise")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantidadeDoacao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ValidadeDoacao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoadorID");

                    b.ToTable("Doacoes");
                });

            modelBuilder.Entity("MedShare.Models.Doador", b =>
                {
                    b.Property<int>("DoadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DoadorCPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DoadorEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DoadorNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DoadorSenha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DoadorId");

                    b.ToTable("Doadores");
                });

            modelBuilder.Entity("MedShare.Models.Instituicao", b =>
                {
                    b.Property<int>("InstituicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InstituicaoCNPJ")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstituicaoEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstituicaoEndereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstituicaoNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstituicaoSenha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InstituicaoId");

                    b.ToTable("Instituicoes");
                });

            modelBuilder.Entity("MedShare.Models.Notificacao", b =>
                {
                    b.Property<int>("NotificacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Doador")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Lida")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mensagem")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("NotificacaoId");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("MedShare.Models.Usuario", b =>
                {
                    b.Property<int>("Doador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Perfil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UsuarioEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioSenha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Doador");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MedShare.Models.Doacao", b =>
                {
                    b.HasOne("MedShare.Models.Doador", "Doador")
                        .WithMany("Doacoes")
                        .HasForeignKey("DoadorID");

                    b.Navigation("Doador");
                });

            modelBuilder.Entity("MedShare.Models.Doador", b =>
                {
                    b.Navigation("Doacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
